@echo off
rem Variables

set DEBUG=0
set SYSTEM=windows
set HELP=0
set CODECHECK=0
set DEVELOP=0

rem Default compiler settings
set CXX=g++
set LINK=g++
set FLAGS=-Wall -c
set DEBUGFLAGS=-g -DATOM_DEBUG
set UNIXFLAGS=-DUNIX
set UNIXCORELIB=-lSDL -lGL
set WINDOWSCORELIB=-lSDLmain -lSDL -lopengl32
set FSMANFLAGS=-D_FSMANAGER_
set UNIXCPPLINT=python cpplint.py
set WINDOWSCPPLINT=python.exe cpplint.py
set CPPLINTFLAGS=--filter=-legal/copyright,-build/header_guard,-build/include,-runtime/int,-runtime/references,-whitespace/newline
set UNIXCOREPATH=core/
set WINDOWSCOREPATH=core\
set UNIXCOREOBJPATH=%UNIXCOREPATH%obj/
set WINDOWSCOREOBJPATH=%WINDOWSCOREPATH%obj\
set UNIXUTILSPATH=utils/
set WINDOWSUTILSPATH=utils\
set UNIXUTILSOBJPATH=%UNIXUTILSPATH%obj/
set WINDOWSUTILSOBJPATH=%WINDOWSUTILSPATH%obj\
set UNIXBINPATH=bin/
set UNIXDEBUGBINPATH=atom-engine-test/
set WINDOWSBINPATH=bin\
set WINDOWSDEBUGBINPATH=atom-engine-test\
set UNIXATOM=atom
set WINDOWSATOM=atom.exe
set UNIXFSMAN=fsman
set WINDOWSFSMAN=fsman.exe
set GCCOBJEXT=.o
set WINOBJEXT=.obj

rem Parse command line arguments
for %%i in (%*) do (
  if {%%i}=={--enable-debug} (
      set DEBUG=1
  )
  if {%%i}=={--system=windows} (
    set SYSTEM=windows
  )
  if {%%i}=={--system=unix} (
    set SYSTEM=unix
  ) 
  if {%%i}=={--develop} (
    set DEBUG=1
    set DEVELOP=1
    set CODECHECK=1
  ) 
  if {%%i}=={--help} (
    set HELP=1
  ) 
  if {%%i}=={-h} (
    set HELP=1
  ) 
  if {%%i}=={/?} (
    set HELP=1
  )
)
rem Print Command Line Options
if %HELP% equ 1 (
  echo "Available options:"
  echo "   --enable-debug               Compile with debug information"
  echo "   --system=<p>                 Target system (windows, unix)"
  echo "   --develop                    Enable develop build (with codecheck & debug)"
  echo "   -h,--help                    Show this Help"
  pause
  goto end
)

rem Begin processing...

if %DEVELOP% equ 1 (
  echo Build develop version
)

rem Debug/Release mode
if %DEBUG% equ 1 (
  echo Debug information will be available
  set FLAGS=%FLAGS% %DEBUGFLAGS%
)else echo Build release version

rem Target system
set SYSFLAG=0
if {%SYSTEM%}=={unix} (
  echo Target system is unix
  set FLAGS=%FLAGS% %UNIXFLAGS
  set CORELIB=%UNIXCORELIB%
  set COREPATH=%UNIXCOREPATH%
  set COREOBJPATH=%UNIXCOREOBJPATH%
  set UTILSPATH=%UNIXUTILSPATH%
  set UTILSOBJPATH=%UNIXUTILSOBJPATH%
  set ATOM=%UNIXATOM%
  set FSMAN=%UNIXFSMAN%
  set SYSFLAG=1
  if %DEBUG% equ 1 (
    set BINPATH=%UNIXDEBUGBINPATH%
  )else set BINPATH=%%UNIXBINPATH%
)
if {%SYSTEM%}=={windows} (
  echo Target system is windows
  set CORELIB=%WINDOWSCORELIB%
  set COREPATH=%WINDOWSCOREPATH%
  set COREOBJPATH=%WINDOWSCOREOBJPATH%
  set UTILSPATH=%WINDOWSUTILSPATH%
  set UTILSOBJPATH=%WINDOWSUTILSOBJPATH%
  set ATOM=%WINDOWSATOM%
  set FSMAN=%WINDOWSFSMAN%
  set SYSFLAG=1
  if %DEBUG% equ 1 (
    set BINPATH=%WINDOWSDEBUGBINPATH%
  ) else set BINPATH=%WINDOWSBINPATH%
)
if %SYSFLAG% equ 0 (
  echo ERROR! Wrong target system
  pause
  exit -1
)

rem Codecheck
if %CODECHECK% equ 1 (
  echo Code check is enabled
  if {%SYSTEM%}=={unix} ( 
    set CPPLINT=%UNIXCPPLINT%
  )
  if {%SYSTEM%}=={windows} (
    set CPPLINT=%WINDOWSCPPLINT%
  )
)

rem Check object file extension
if {%CXX%}=={g++} (
  set OBJEXT=%GCCOBJEXT%
)else set OBJEXT=%WINOBJEXT%

rem Writing Makefile
echo Writing Makefile...
echo # Generated by configure utility > Makefile
rem Write codecheck section
if %CODECHECK% equ 1 (
  echo all : cpplint prepare atom fsman >> Makefile
  echo .PHONY : all >> Makefile
  echo .PHONY : cpplint >> Makefile
  echo cpplint : >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% preproc.h >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%error.h >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%error.cpp >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%gamefs.h >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%gamefs.cpp >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%window.h >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%window.cpp >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %COREPATH%main.cpp >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %UTILSPATH%crc32.h >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %UTILSPATH%crc32.cpp >> Makefile
  echo 	%CPPLINT% %CPPLINTFLAGS% %UTILSPATH%fsman.cpp >> Makefile
)  
if %CODECHECK% equ 0 (
  echo all : prepare atom fsman >> Makefile
  echo .PHONY : all >> Makefile
)
rem Write atom section
set COREOBJ=%COREOBJPATH%error%OBJEXT% %COREOBJPATH%gamefs%OBJEXT% %COREOBJPATH%window%OBJEXT% %COREOBJPATH%main%OBJEXT%
echo atom : %COREOBJ% >> Makefile
echo 	%LINK% %CORELIB% %COREOBJ% -o %BINPATH%%ATOM% >> Makefile
echo %COREOBJPATH%error%OBJEXT% : %COREPATH%error.cpp %COREPATH%error.h preproc.h >> Makefile
echo 	%CXX% %FLAGS% %COREPATH%error.cpp -o %COREOBJPATH%error%OBJEXT% >> Makefile
echo %COREOBJPATH%gamefs%OBJEXT% : %COREPATH%gamefs.cpp %COREPATH%gamefs.h preproc.h %COREPATH%error.h >> Makefile
echo 	%CXX% %FLAGS% %COREPATH%gamefs.cpp -o %COREOBJPATH%gamefs%OBJEXT% >> Makefile
echo %COREOBJPATH%window%OBJEXT% : %COREPATH%window.cpp %COREPATH%window.h %COREPATH%error.h >> Makefile
echo 	%CXX% %FLAGS% %COREPATH%window.cpp -o %COREOBJPATH%window%OBJEXT% >> Makefile
echo %COREOBJPATH%main%OBJEXT% : %COREPATH%main.cpp preproc.h %COREPATH%window.h %COREPATH%error.h >> Makefile
echo 	%CXX% %FLAGS% %COREPATH%main.cpp -o %COREOBJPATH%main%OBJEXT% >> Makefile

rem Write fsman section
set FSMANOBJ=%UTILSOBJPATH%crc32%OBJEXT% %UTILSOBJPATH%error%OBJEXT% %UTILSOBJPATH%gamefs%OBJEXT% %UTILSOBJPATH%fsman%OBJEXT%
echo fsman : %FSMANOBJ% >> Makefile
echo 	%LINK% %FSMANOBJ% -o %BINPATH%%FSMAN% >> Makefile
echo %UTILSOBJPATH%crc32%OBJEXT% : %UTILSPATH%crc32.cpp %UTILSPATH%crc32.h >> Makefile
echo 	%CXX% %FLAGS% %FSMANFLAGS% %UTILSPATH%crc32.cpp -o %UTILSOBJPATH%crc32%OBJEXT% >> Makefile
echo %UTILSOBJPATH%error%OBJEXT% : %COREPATH%error.cpp %COREPATH%error.h preproc.h >> Makefile
echo 	%CXX% %FLAGS% %FSMANFLAGS% %COREPATH%error.cpp -o %UTILSOBJPATH%error%OBJEXT% >> Makefile
echo %UTILSOBJPATH%gamefs%OBJEXT% : %COREPATH%gamefs.cpp %COREPATH%gamefs.h preproc.h %COREPATH%error.h %UTILSPATH%crc32.h >> Makefile
echo 	%CXX% %FLAGS% %FSMANFLAGS% %COREPATH%gamefs.cpp -o %UTILSOBJPATH%gamefs%OBJEXT% >> Makefile
echo %UTILSOBJPATH%fsman%OBJEXT% : %UTILSPATH%fsman.cpp preproc.h %COREPATH%gamefs.h %COREPATH%error.h >> Makefile
echo 	%CXX% %FLAGS% %FSMANFLAGS% %UTILSPATH%fsman.cpp -o %UTILSOBJPATH%fsman%OBJEXT% >> Makefile

rem Write prepare section
  echo .PHONY : prepare >> Makefile
  echo prepare : >> Makefile
if {%SYSTEM%}=={unix} (
  echo 	-mkdir %COREOBJPATH% >> Makefile
  echo 	-mkdir %UTILSOBJPATH% >> Makefile
  echo 	-mkdir %BINPATH% >> Makefile
)
if {%SYSTEM%}=={windows} (
  echo 	-md %COREOBJPATH% >> Makefile
  echo 	-md %UTILSOBJPATH% >> Makefile
  echo 	-md %BINPATH% >> Makefile
)
rem Write clean section
echo .PHONY : clean >> Makefile
echo clean : >> Makefile
echo 	-rm -r %COREOBJPATH% >> Makefile
echo 	-rm -r %UTILSOBJPATH% >> Makefile
echo 	-rm %BINPATH%%ATOM% >> Makefile
echo 	-rm %BINPATH%%FSMAN% >> Makefile

echo Done
echo Please rum "make" to compile atom engine
pause

:end